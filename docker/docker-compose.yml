version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: chat-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: chat_db
      MYSQL_USER: chat_user
      MYSQL_PASSWORD: chat_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - chat-network
    restart: unless-stopped
3306
  redis:
    image: redis:7-alpine
    container_name: chat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chat-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: chat-backend
    environment:
      DATABASE_URL: mysql://chat_user:chat_password@mysql:3306/chat_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "50051:50051"  # gRPC
      - "8080:8080"    # WebSocket
      - "3001:3001"    # HTTP Health Check
    depends_on:
      - mysql
      - redis
    networks:
      - chat-network
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: chat-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - chat-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  chat-network:
    driver: bridge
